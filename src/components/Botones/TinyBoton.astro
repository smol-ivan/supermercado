---
export interface Props {
    label: string;
    onClick?: () => void;
    isSubmit?: boolean;
    isReset?: boolean;
    isReturn?: boolean;
    isDisabled?: boolean;
    isHidden?: boolean;
    isOk?: boolean;
    isCancel?: boolean;
}

const {
    label,
    isSubmit,
    isReset,
    isReturn,
    isDisabled,
    isHidden,
    isOk,
    isCancel,
    onClick,
} = Astro.props;

const handleClick = () => {
    if (isDisabled) return;
    onClick();
};

const buttonClass = isSubmit
    ? "boton-submit"
    : isReset
      ? "boton-reset"
      : isReturn
        ? "boton-return"
        : isOk
          ? "boton-ok"
          : isCancel
            ? "boton-cancel"
            : "";

const buttonType = isSubmit ? "submit" : isReset ? "reset" : "button";
---

<button
    class=`boton ${buttonClass}`
    disabled={isDisabled}
    hidden={isHidden}
    type={buttonType}
>
    {label}
</button>

<style>
    @reference "../../styles/global.css";

    .boton {
        @apply text-white font-bold px-[1.5rem] py-[0.5rem] rounded-md cursor-pointer m-4 flex justify-center items-center;
    }

    /* button {
        @apply w-full h-full text-3xl  bg-gray-200 flex justify-center items-center border border-black rounded-lg cursor-pointer p-10;
    } */

    button:active {
        @apply scale-90 transition-transform;
    }

    .boton-submit {
        @apply bg-amber-400 hover:bg-amber-500 active:bg-amber-600;
    }

    .boton-reset {
        @apply bg-red-300 hover:bg-red-400 active:bg-red-500;
    }
</style>
